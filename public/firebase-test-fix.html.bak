<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Firebase接続テスト - RentPipe Phase2（修正版）</title>
    <style>
        body { font-family: 'Noto Sans JP', sans-serif; padding: 20px; max-width: 800px; margin: 0 auto; }
        .test-result { padding: 15px; margin: 10px 0; border-radius: 8px; }
        .success { background: #d4edda; border: 1px solid #c3e6cb; color: #155724; }
        .error { background: #f8d7da; border: 1px solid #f5c6cb; color: #721c24; }
        .info { background: #d1ecf1; border: 1px solid #b8daff; color: #0c5460; }
        .test-button { background: #1e3a8a; color: white; border: none; padding: 12px 24px; border-radius: 8px; margin: 5px; cursor: pointer; }
        .test-button:hover { background: #1e40af; }
        pre { background: #f8f9fa; padding: 15px; border-radius: 8px; overflow-x: auto; }
    </style>
</head>
<body>
    <h1>🔥 RentPipe Phase2 - Firebase接続テスト（修正版）</h1>
    
    <div id="status" class="test-result info">
        <strong>🔧 初期化中...</strong><br>
        Firebase設定を読み込んでいます...
    </div>
    
    <div class="test-controls">
        <button class="test-button" onclick="testFirebaseConnection()">🔌 Firebase接続テスト</button>
        <button class="test-button" onclick="testFirestore()">📊 Firestore読み書きテスト</button>
        <button class="test-button" onclick="testAuthenticationBasic()">🔐 認証システム基本テスト</button>
        <button class="test-button" onclick="testDataManager()">📋 データマネージャーテスト</button>
        <button class="test-button" onclick="runAllTests()">🚀 全テスト実行</button>
    </div>
    
    <div id="test-results"></div>
    
    <div id="console-output">
        <h3>📟 コンソール出力</h3>
        <pre id="console-log"></pre>
    </div>

    <!-- Firebase SDKs -->
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-firestore-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-auth-compat.js"></script>
    <script src="js/firebase-config.js"></script>
    
    <script>
        // コンソール出力をHTMLに表示
        const originalLog = console.log;
        const originalError = console.error;
        const consoleOutput = document.getElementById('console-log');
        
        function addToConsole(message, type = 'log') {
            const timestamp = new Date().toLocaleTimeString();
            const logEntry = `[${timestamp}] ${type.toUpperCase()}: ${message}\n`;
            consoleOutput.textContent += logEntry;
            consoleOutput.scrollTop = consoleOutput.scrollHeight;
        }
        
        console.log = function(...args) {
            originalLog.apply(console, args);
            addToConsole(args.join(' '), 'log');
        };
        
        console.error = function(...args) {
            originalError.apply(console, args);
            addToConsole(args.join(' '), 'error');
        };
        
        // テスト結果表示
        function showResult(title, success, message, details = null) {
            const resultsDiv = document.getElementById('test-results');
            const resultClass = success ? 'success' : 'error';
            const icon = success ? '✅' : '❌';
            
            const resultHtml = `
                <div class="test-result ${resultClass}">
                    <strong>${icon} ${title}</strong><br>
                    ${message}
                    ${details ? `<pre>${details}</pre>` : ''}
                </div>
            `;
            
            resultsDiv.innerHTML += resultHtml;
        }
        
        // Firebase接続テスト
        async function testFirebaseConnection() {
            console.log('🔌 Firebase接続テスト開始...');
            
            try {
                if (!window.firebase) {
                    throw new Error('Firebase SDKが読み込まれていません');
                }
                
                if (!window.db) {
                    throw new Error('Firestoreが初期化されていません');
                }
                
                // 基本的な接続テスト
                await window.db.collection('system').doc('test').get();
                
                showResult(
                    'Firebase接続テスト', 
                    true, 
                    'Firebase/Firestoreへの接続が成功しました',
                    `Project ID: ${window.db.app.options.projectId}\nApp Name: ${window.db.app.name}`
                );
                
            } catch (error) {
                showResult(
                    'Firebase接続テスト', 
                    false, 
                    'Firebase接続に失敗しました',
                    error.message
                );
            }
        }
        
        // Firestore読み書きテスト
        async function testFirestore() {
            console.log('📊 Firestore読み書きテスト開始...');
            
            try {
                const testData = {
                    message: 'Phase2テストデータ',
                    timestamp: new Date().toISOString(),
                    testId: Math.random().toString(36).substr(2, 9),
                    version: 'Phase2-Test'
                };
                
                // 書き込みテスト
                const docRef = await window.db.collection('system').doc('phase2-test').set(testData);
                console.log(`✅ テストデータ書き込み完了`);
                
                // 読み込みテスト
                const doc = await window.db.collection('system').doc('phase2-test').get();
                const readData = doc.data();
                
                if (!doc.exists) {
                    throw new Error('書き込んだデータが読み取れませんでした');
                }
                
                showResult(
                    'Firestore読み書きテスト', 
                    true, 
                    'Firestoreの読み書きが正常に動作しています',
                    JSON.stringify(readData, null, 2)
                );
                
            } catch (error) {
                showResult(
                    'Firestore読み書きテスト', 
                    false, 
                    'Firestore操作でエラーが発生しました',
                    error.message
                );
            }
        }
        
        // 認証システム基本テスト（匿名認証なし版）
        async function testAuthenticationBasic() {
            console.log('🔐 認証システム基本テスト開始...');
            
            try {
                if (!window.auth) {
                    throw new Error('Firebase Authenticationが初期化されていません');
                }
                
                // 認証状態監視テスト
                const authStatePromise = new Promise((resolve, reject) => {
                    const timeout = setTimeout(() => {
                        reject(new Error('認証状態確認がタイムアウトしました'));
                    }, 5000);
                    
                    window.auth.onAuthStateChanged(function(user) {
                        clearTimeout(timeout);
                        resolve(user);
                    });
                });
                
                const user = await authStatePromise;
                
                showResult(
                    '認証システム基本テスト', 
                    true, 
                    '認証システムが正常に初期化されています',
                    `認証状態: ${user ? 'ログイン済み' : '未ログイン'}\n${user ? `User ID: ${user.uid}` : '匿名認証未実行'}`
                );
                
            } catch (error) {
                showResult(
                    '認証システム基本テスト', 
                    false, 
                    '認証システムでエラーが発生しました',
                    error.message
                );
            }
        }
        
        // データマネージャーテスト
        async function testDataManager() {
            console.log('📋 データマネージャーテスト開始...');
            
            try {
                if (!window.FirebaseDataManager) {
                    throw new Error('FirebaseDataManagerが読み込まれていません');
                }
                
                // 接続テスト
                const connectionResult = await window.FirebaseDataManager.testConnection();
                
                if (!connectionResult) {
                    throw new Error('FirebaseDataManager接続テストが失敗しました');
                }
                
                // 顧客データ取得テスト
                const customers = await window.FirebaseDataManager.getCustomers();
                
                showResult(
                    'データマネージャーテスト', 
                    true, 
                    'FirebaseDataManagerが正常に動作しています',
                    `顧客データ件数: ${customers.length}件\nテナントID: ${window.FirebaseDataManager.getCurrentTenantId()}\nデータソース: ${customers.length > 0 ? 'ローカルストレージ' : 'Firestore'}`
                );
                
            } catch (error) {
                showResult(
                    'データマネージャーテスト', 
                    false, 
                    'データマネージャーでエラーが発生しました',
                    error.message
                );
            }
        }
        
        // 全テスト実行
        async function runAllTests() {
            document.getElementById('test-results').innerHTML = '';
            console.log('🚀 全テスト実行開始...');
            
            await testFirebaseConnection();
            await new Promise(resolve => setTimeout(resolve, 1000));
            
            await testFirestore();
            await new Promise(resolve => setTimeout(resolve, 1000));
            
            await testAuthenticationBasic();
            await new Promise(resolve => setTimeout(resolve, 1000));
            
            await testDataManager();
            
            console.log('🎉 全テスト実行完了');
        }
        
        // 初期化完了通知
        window.addEventListener('load', function() {
            setTimeout(() => {
                document.getElementById('status').innerHTML = `
                    <strong>✅ 初期化完了</strong><br>
                    Firebase Phase2設定が読み込まれました。「🚀 全テスト実行」ボタンで一括テストを実行してください。
                `;
                document.getElementById('status').className = 'test-result success';
            }, 2000);
        });
    </script>
</body>
</html>
