<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Firebase認証テスト - RentPipe</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 2rem; }
        .test-section { margin: 1rem 0; padding: 1rem; border: 1px solid #ddd; border-radius: 8px; }
        .success { background: #d1fae5; border-color: #059669; }
        .error { background: #fee2e2; border-color: #dc2626; }
        .info { background: #dbeafe; border-color: #3b82f6; }
        button { padding: 10px 20px; margin: 5px; cursor: pointer; }
        pre { background: #f3f4f6; padding: 1rem; overflow-x: auto; }
    </style>
</head>
<body>
    <h1>🔥 Firebase認証テスト</h1>
    
    <div class="test-section info">
        <h3>📊 現在の設定</h3>
        <div id="configInfo">設定読み込み中...</div>
    </div>
    
    <div class="test-section">
        <h3>🔧 テスト実行</h3>
        <button onclick="testFirebaseInit()">1. Firebase初期化テスト</button>
        <button onclick="testAuthDomain()">2. 認証ドメインテスト</button>
        <button onclick="testGoogleAuth()">3. Google認証テスト</button>
        <button onclick="showDebugInfo()">4. デバッグ情報表示</button>
    </div>
    
    <div class="test-section">
        <h3>📋 テスト結果</h3>
        <div id="testResults">テストを実行してください</div>
    </div>
    
    <div class="test-section">
        <h3>🔍 デバッグログ</h3>
        <pre id="debugLog">ログ待機中...</pre>
    </div>

    <!-- Firebase SDKs -->
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-auth-compat.js"></script>
    
    <script>
        // 🔧 デバッグ用のFirebase設定テスト
        
        let app, auth;
        const debugLog = document.getElementById('debugLog');
        const testResults = document.getElementById('testResults');
        
        function log(message) {
            const timestamp = new Date().toLocaleTimeString();
            debugLog.textContent += `[${timestamp}] ${message}\n`;
            debugLog.scrollTop = debugLog.scrollHeight;
            console.log(message);
        }
        
        function showResult(test, success, message) {
            const className = success ? 'success' : 'error';
            const icon = success ? '✅' : '❌';
            testResults.innerHTML += `<div class="${className}">${icon} ${test}: ${message}</div>`;
        }
        
        // 現在の設定表示
        function showCurrentConfig() {
            const config = {
                apiKey: "AIzaSyBvJGdan0lvVSkaAbbSXQkoh6YyPoGyTgM",
                authDomain: "rentpipe-ab04e.firebaseapp.com",
                projectId: "rentpipe-ab04e",
                storageBucket: "rentpipe-ab04e.firebasestorage.app",
                messagingSenderId: "586040985916",
                appId: "1:586040985916:web:3cdb5db072f1a6569fb639"
            };
            
            document.getElementById('configInfo').innerHTML = `
                <strong>プロジェクトID:</strong> ${config.projectId}<br>
                <strong>認証ドメイン:</strong> ${config.authDomain}<br>
                <strong>APIキー:</strong> ${config.apiKey.substring(0, 20)}...<br>
                <strong>現在のドメイン:</strong> ${window.location.origin}
            `;
        }
        
        // Firebase初期化テスト
        function testFirebaseInit() {
            log('🔥 Firebase初期化テスト開始...');
            
            try {
                const firebaseConfig = {
                    apiKey: "AIzaSyBvJGdan0lvVSkaAbbSXQkoh6YyPoGyTgM",
                    authDomain: "rentpipe-ab04e.firebaseapp.com",
                    projectId: "rentpipe-ab04e",
                    storageBucket: "rentpipe-ab04e.firebasestorage.app",
                    messagingSenderId: "586040985916",
                    appId: "1:586040985916:web:3cdb5db072f1a6569fb639"
                };
                
                app = firebase.initializeApp(firebaseConfig);
                auth = firebase.auth();
                
                log(`✅ Firebase初期化成功: ${app.name}`);
                log(`📱 プロジェクトID: ${app.options.projectId}`);
                
                showResult('Firebase初期化', true, 'Firebase接続成功');
                
            } catch (error) {
                log(`❌ Firebase初期化エラー: ${error.message}`);
                showResult('Firebase初期化', false, error.message);
            }
        }
        
        // 認証ドメインテスト
        function testAuthDomain() {
            log('🌐 認証ドメインテスト開始...');
            
            const currentDomain = window.location.origin;
            const authDomain = 'rentpipe-ab04e.firebaseapp.com';
            
            log(`現在のドメイン: ${currentDomain}`);
            log(`Firebase認証ドメイン: https://${authDomain}`);
            
            if (currentDomain.includes('rentpipe-ab04e.web.app') || 
                currentDomain.includes('rentpipe-ab04e.firebaseapp.com') ||
                currentDomain.includes('localhost')) {
                showResult('認証ドメイン', true, '承認済みドメインです');
            } else {
                showResult('認証ドメイン', false, `未承認ドメイン: ${currentDomain}`);
            }
        }
        
        // Google認証テスト
        async function testGoogleAuth() {
            if (!auth) {
                showResult('Google認証', false, '先にFirebase初期化を実行してください');
                return;
            }
            
            log('🔐 Google認証テスト開始...');
            
            try {
                const provider = new firebase.auth.GoogleAuthProvider();
                provider.addScope('email');
                provider.addScope('profile');
                
                log('Google認証プロバイダー設定完了');
                showResult('Google認証設定', true, 'プロバイダー設定成功');
                
                // 実際の認証はユーザーの判断に委ねる
                log('⚠️ 実際のログインテストは login-google-simple.html で実行してください');
                
            } catch (error) {
                log(`❌ Google認証設定エラー: ${error.message}`);
                showResult('Google認証設定', false, error.message);
            }
        }
        
        // デバッグ情報表示
        function showDebugInfo() {
            log('🔍 デバッグ情報収集中...');
            
            const info = {
                'ユーザーエージェント': navigator.userAgent,
                '現在のURL': window.location.href,
                'Firebase SDK': typeof firebase !== 'undefined' ? 'ロード済み' : '未ロード',
                'ローカルストレージ認証': localStorage.getItem('rentpipe_auth_simple') || '未設定',
                'セッションストレージ': sessionStorage.length + '個のアイテム'
            };
            
            Object.entries(info).forEach(([key, value]) => {
                log(`${key}: ${value}`);
            });
            
            showResult('デバッグ情報', true, 'ログに出力完了');
        }
        
        // 初期化
        document.addEventListener('DOMContentLoaded', function() {
            showCurrentConfig();
            log('🚀 Firebase認証テストページ初期化完了');
        });
    </script>
</body>
</html>
