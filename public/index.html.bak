<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>RentPipe - ダッシュボード</title>
    <link rel="stylesheet" href="css/main.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;500;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- ナビゲーション -->
    <nav class="navbar">
        <div class="nav-container">
            <div class="nav-brand">
                <span class="logo-icon">🏠</span>
                <span class="logo-text">RentPipe</span>
            </div>
            
            <button class="nav-toggle" id="navToggle" aria-label="メニュー">
                <span></span>
                <span></span>
                <span></span>
            </button>
            
            <div class="nav-menu" id="navMenu">
                <a href="index.html" class="nav-link active">
                    <span class="nav-icon">📊</span>
                    <span>ダッシュボード</span>
                </a>
                <a href="customer.html" class="nav-link">
                    <span class="nav-icon">👥</span>
                    <span>顧客管理</span>
                </a>
                <a href="pipeline.html" class="nav-link">
                    <span class="nav-icon">📈</span>
                    <span>パイプライン</span>
                </a>
                <a href="customer-form.html" class="nav-link">
                    <span class="nav-icon">📝</span>
                    <span>顧客フォーム</span>
                </a>
            </div>
        </div>
    </nav>

    <!-- メインコンテンツ -->
    <main class="main-content">
        <div class="container">
            <!-- ページヘッダー -->
            <div class="page-header">
                <h1>ダッシュボード</h1>
                <p class="page-description">全体の状況を一目で確認</p>
            </div>

            <!-- 統計カード -->
            <div class="stats-grid">
                <div class="stat-card">
                    <div class="stat-icon" style="background: linear-gradient(135deg, #667eea, #764ba2);">
                        👥
                    </div>
                    <div class="stat-content">
                        <div class="stat-label">総顧客数</div>
                        <div class="stat-value" id="totalCustomers">0</div>
                    </div>
                </div>

                <div class="stat-card">
                    <div class="stat-icon" style="background: linear-gradient(135deg, #f093fb, #f5576c);">
                        📈
                    </div>
                    <div class="stat-content">
                        <div class="stat-label">進行中案件</div>
                        <div class="stat-value" id="activeDeals">0</div>
                    </div>
                </div>

                <div class="stat-card">
                    <div class="stat-icon" style="background: linear-gradient(135deg, #4facfe, #00f2fe);">
                        ✅
                    </div>
                    <div class="stat-content">
                        <div class="stat-label">今月の成約</div>
                        <div class="stat-value" id="monthlyCompleted">0</div>
                    </div>
                </div>

                <div class="stat-card">
                    <div class="stat-icon" style="background: linear-gradient(135deg, #43e97b, #38f9d7);">
                        📊
                    </div>
                    <div class="stat-content">
                        <div class="stat-label">成約率</div>
                        <div class="stat-value" id="conversionRate">0%</div>
                    </div>
                </div>
            </div>

            <!-- 最近の活動 -->
            <div class="card">
                <div class="card-header">
                    <h2>最近の活動</h2>
                    <button class="btn btn-sm btn-outline" onclick="refreshActivities()">更新</button>
                </div>
                <div class="card-body">
                    <div id="recentActivities" class="activity-list">
                        <div class="empty-state">
                            <span class="empty-icon">📋</span>
                            <p>まだ活動履歴がありません</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- クイックアクション -->
            <div class="quick-actions">
                <h3>クイックアクション</h3>
                <div class="action-buttons">
                    <a href="customer.html" class="action-btn">
                        <span class="action-icon">➕</span>
                        <span>新規顧客追加</span>
                    </a>
                    <a href="pipeline.html" class="action-btn">
                        <span class="action-icon">📊</span>
                        <span>パイプライン確認</span>
                    </a>
                    <a href="customer-form.html" class="action-btn">
                        <span class="action-icon">🔗</span>
                        <span>フォームURL生成</span>
                    </a>
                    <button onclick="exportData()" class="action-btn">
                        <span class="action-icon">💾</span>
                        <span>データエクスポート</span>
                    </button>
                </div>
            </div>
        </div>
    </main>

    <!-- JavaScript -->
    <script src="js/firebase-config.js"></script>
    <script src="js/error-handler.js"></script>
    <script src="js/performance.js"></script>
    <script>
        // ナビゲーショントグル
        document.getElementById('navToggle').addEventListener('click', function() {
            document.getElementById('navMenu').classList.toggle('active');
            this.classList.toggle('active');
        });

        // ダッシュボードデータの更新
        function updateDashboard() {
            try {
                const customers = window.DemoDataManager.getCustomers();
                const history = window.DemoDataManager.getHistory();
                
                // 統計を計算
                document.getElementById('totalCustomers').textContent = customers.length;
                
                const activeCount = customers.filter(c => 
                    c.pipelineStatus && c.pipelineStatus !== '完了'
                ).length;
                document.getElementById('activeDeals').textContent = activeCount;
                
                // 今月の成約を計算
                const now = new Date();
                const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);
                const monthlyCompleted = customers.filter(c => {
                    if (c.pipelineStatus !== '完了') return false;
                    const updatedAt = new Date(c.updatedAt);
                    return updatedAt >= monthStart;
                }).length;
                document.getElementById('monthlyCompleted').textContent = monthlyCompleted;
                
                // 成約率を計算
                const completedTotal = customers.filter(c => c.pipelineStatus === '完了').length;
                const rate = customers.length > 0 ? 
                    Math.round((completedTotal / customers.length) * 100) : 0;
                document.getElementById('conversionRate').textContent = rate + '%';
                
                // 最近の活動を表示
                updateRecentActivities(history.slice(0, 5));
                
            } catch (error) {
                console.error('ダッシュボード更新エラー:', error);
                ErrorHandler.showError('ダッシュボードの更新に失敗しました', error.message);
            }
        }

        // 最近の活動を更新
        function updateRecentActivities(activities) {
            const container = document.getElementById('recentActivities');
            
            if (activities.length === 0) {
                container.innerHTML = `
                    <div class="empty-state">
                        <span class="empty-icon">📋</span>
                        <p>まだ活動履歴がありません</p>
                    </div>
                `;
                return;
            }
            
            container.innerHTML = activities.map(activity => `
                <div class="activity-item">
                    <div class="activity-icon">📝</div>
                    <div class="activity-content">
                        <div class="activity-title">${activity.note || '活動記録'}</div>
                        <div class="activity-time">${formatDate(activity.timestamp)}</div>
                    </div>
                </div>
            `).join('');
        }

        // 日付フォーマット
        function formatDate(date) {
            const d = new Date(date);
            const now = new Date();
            const diff = now - d;
            
            if (diff < 60000) return 'たった今';
            if (diff < 3600000) return Math.floor(diff / 60000) + '分前';
            if (diff < 86400000) return Math.floor(diff / 3600000) + '時間前';
            if (diff < 604800000) return Math.floor(diff / 86400000) + '日前';
            
            return d.toLocaleDateString('ja-JP');
        }

        // 活動を更新
        function refreshActivities() {
            ErrorHandler.showLoading('更新中...');
            
            setTimeout(() => {
                updateDashboard();
                ErrorHandler.hideLoading();
                ErrorHandler.showSuccess('更新完了しました');
            }, 500);
        }

        // データエクスポート
        function exportData() {
            ErrorHandler.confirm(
                'データをエクスポートしますか？',
                () => {
                    try {
                        const customers = window.DemoDataManager.getCustomers();
                        const dataStr = JSON.stringify(customers, null, 2);
                        const blob = new Blob([dataStr], {type: 'application/json'});
                        const url = URL.createObjectURL(blob);
                        const a = document.createElement('a');
                        a.href = url;
                        a.download = `rentpipe_data_${new Date().toISOString().split('T')[0]}.json`;
                        a.click();
                        URL.revokeObjectURL(url);
                        
                        ErrorHandler.showSuccess('データのエクスポートが完了しました');
                    } catch (error) {
                        ErrorHandler.handleSaveError(error, 'エクスポートデータ');
                    }
                }
            );
        }

        // ページ読み込み時の処理
        document.addEventListener('DOMContentLoaded', function() {
            updateDashboard();
            
            // 定期的に更新（パフォーマンスを考慮）
            setInterval(() => {
                if (document.visibilityState === 'visible') {
                    updateDashboard();
                }
            }, 30000); // 30秒ごと
        });
    </script>
</body>
</html>
